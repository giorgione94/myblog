# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: php:8.1-fpm

pipelines:
  default:
    - parallel:
      - step:
          services:
            - mysql
          name: 'Build and Test'
          script:
            - apt-get update && apt-get install -qy git curl libmcrypt-dev zip unzip
            - docker-php-ext-install pdo_mysql
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install
            - ln -f -s .env.pipelines .env
            - php artisan migrate
            - php artisan serve &
            - sleep 5
            - ./vendor/bin/phpunit
            - curl -vk http://localhost:8000
      - step:
          name: 'Lint'
          script:
            - echo "Your linting goes here..."

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    # - step:
    #     name: 'Deployment to Staging'
    #     deployment: staging
    #     script:
    #       - echo "Your deployment to staging script goes here..."
    # - step:
    #     name: 'Deployment to Production'
    #     deployment: production
    #     trigger: 'manual'
    #     script:
    #       - echo "Your deployment to production script goes here..."

definitions:
  services:
    mysql:
      image: mysql:8.0
      environment:
        MYSQL_DATABASE: 'forge'
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        MYSQL_USER: 'forge'
        MYSQL_PASSWORD: 'secret'

